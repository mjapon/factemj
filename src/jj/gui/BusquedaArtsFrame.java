/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jj.gui;

import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumn;
import jj.controller.ArticulosJpaController;
import jj.entity.Articulos;
import jj.util.datamodels.ArticulosDataModel;
import jj.util.ArticulosModelListener;
import jj.util.EntityManagerUtil;
import jj.util.FilaArticulo;
import jj.util.ISearchArt;
import jj.util.IVAComboBoxEditor;
import jj.util.IVAComboBoxRenderer;

/**
 *
 * @author mjapon
 */
public class BusquedaArtsFrame extends javax.swing.JFrame implements ILabelEstado{

    
    private ArticulosDataModel articulosDataModel;
    private ArticulosModelListener articulosModelListener;
    private EntityManager em;
    private ArticulosJpaController articulosController;
    private ISearchArt iSearchArtFrame;
    /**
     * Creates new form BusquedaArtsFrame
     */
    public BusquedaArtsFrame() {
        initComponents();
        
        this.em = EntityManagerUtil.createEntintyManagerFactory();
        articulosController = new ArticulosJpaController(em);
        articulosDataModel = new ArticulosDataModel(0);
        articulosDataModel.setController(articulosController);
        articulosDataModel.setArticulosFrame(this);
        
        articulosModelListener = new ArticulosModelListener();
        articulosDataModel.addTableModelListener(articulosModelListener);
        
        jTableArts.setModel(articulosDataModel);
       
                
        jTableArts.getTableHeader().addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int col = jTableArts.columnAtPoint(e.getPoint());
                String name = jTableArts.getColumnName(col);
                System.out.println("TableHeader column index selected " + col + " " + name);
                
                try{
                    for (int i=0; i<articulosDataModel.getColumnCount();i++){
                        jTableArts.getColumnModel().getColumn(i).setHeaderValue( articulosDataModel.getColumnName(i) );
                    }                    
                    articulosDataModel.switchSortColumn(col);                    
                }
                catch(Throwable ex){
                    JOptionPane.showMessageDialog(null, "Error en sort:"+ex.getMessage());
                    System.out.println("Error en sort:"+ex.getMessage());
                    ex.printStackTrace();
                }
            }
        });
        
        jTableArts.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                System.out.println("List selection changed--->");
                if (e.getFirstIndex()>=0){
                    btnSelect.setEnabled(true);
                }
                else{
                    btnSelect.setEnabled(false);                    
                }
            }
        });        
        
        jTableArts.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2) {
                    
                    doSelectionAction();
                    System.out.println("dbl clic event-->");
                    
                }
            }
        });
                
        jTableArts.updateUI();
        
        /*
        try{
            articulosDataModel.loadFromDataBase();
        }
        catch(Throwable ex){
            System.out.println("Error al traer de base de datos:"+ex.getMessage());
            //updateLabelEstado("Error al traer de base de datos:"+ex.getMessage());
            JOptionPane.showMessageDialog(null, "Error al traer de base de datos:"+ex.getMessage());
        }
        */
        
        articulosDataModel.fireTableDataChanged(); 
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        filtroTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableArts = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnRefresh = new javax.swing.JButton();
        btnSelect = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabelEstado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel9.setText("Filtro");
        jPanel3.add(jLabel9, java.awt.BorderLayout.WEST);

        filtroTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroTFActionPerformed(evt);
            }
        });
        filtroTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filtroTFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filtroTFKeyReleased(evt);
            }
        });
        jPanel3.add(filtroTF, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jTableArts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableArts.setRowHeight(25);
        jScrollPane1.setViewportView(jTableArts);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel1.setLayout(new java.awt.GridLayout(5, 1));

        btnRefresh.setText("Actualizar");
        jPanel1.add(btnRefresh);

        btnSelect.setText("Seleccionar");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        jPanel1.add(btnSelect);

        btnClose.setText("cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose);

        getContentPane().add(jPanel1, java.awt.BorderLayout.EAST);

        jPanel4.setLayout(new java.awt.BorderLayout());
        jPanel4.add(jLabelEstado, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtroTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtroTFActionPerformed

    private void filtroTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroTFKeyPressed

        /*
        String filtroValue = this.filtroTF.getText().trim();
        this.itemsFiltrados.clear();
        if (filtroValue.length()>0){
            List<FilaArticulo> listaArticulos = articulosDataModel.getItems();
            for(FilaArticulo fila: listaArticulos){
                if (filtroInRow(filtroValue, fila)){
                    this.itemsFiltrados.add(fila);
                }
            }

            if (this.itemsFiltrados.size()>0){
                this.articulosDataModel.setItems(itemsFiltrados);
            }
            else{

            }
        }
        */

    }//GEN-LAST:event_filtroTFKeyPressed

    public void doFilter(){
        System.out.println("Filtro key pressed--->");        
        //Se debe filtrar todos los articulos del model                
        String filtro = this.filtroTF.getText().trim();
        if (filtro.length()>0){
            System.out.println("Se aplica el filtro:"+filtro);
            try{
                this.articulosDataModel.loadFromDataBaseFilter(filtro);
            }
            catch(Throwable ex){
                System.out.println("Error al cargar datos:"+ ex.getMessage());
                ex.printStackTrace();
            }
        }
        
    }
    
    public void updateLabelEstado(String label){
        this.jLabelEstado.setText(label);
    }
    
    
    private void filtroTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtroTFKeyReleased
        doFilter();
    }//GEN-LAST:event_filtroTFKeyReleased

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
         this.setVisible(false); 
    }//GEN-LAST:event_btnCloseActionPerformed

    public void doSelectionAction(){
        System.out.println("Select action");
        int row = this.jTableArts.getSelectedRow();
        if (row>-1){
            FilaArticulo filart = this.articulosDataModel.getValueAt(row);
            String codBarra = filart.getCodBarra();
            List<Articulos> articulosList =  articulosController.findByBarcode(codBarra);
            if (articulosList != null && articulosList.size()>0){
                
                iSearchArtFrame.setFilaArticulo(articulosList.get(0));
                
                //facturaFrame.addArticulo(articulosList.get(0));
                setVisible(false);
            }
            else{
                System.out.println("NO se pudo localizar el articulo:"+codBarra+", en la base de datos");
            }
        }        
    }
    
    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        doSelectionAction();
    }//GEN-LAST:event_btnSelectActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.filtroTF.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        this.filtroTF.requestFocus();
        
    }//GEN-LAST:event_formWindowActivated

    public ISearchArt getSearchArtFrame() {
        return iSearchArtFrame;
    }

    public void setSearchArtFrame(ISearchArt facturaFrame) {
        this.iSearchArtFrame = facturaFrame;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSelect;
    private javax.swing.JTextField filtroTF;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableArts;
    // End of variables declaration//GEN-END:variables

    @Override
    public void disableBtnBorar() {
        
        this.btnSelect.setEnabled(false);
        
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
